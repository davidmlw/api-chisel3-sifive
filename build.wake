
def buildDir = mkdir "build/chisel3"

def scalacOpts = macrosParadisePlugin, "-deprecation", "-feature", Nil

global def chisel3CoreMacros =
  makeScalaModuleFromJSON here "chisel3Macros"
  | scalaModuleAddSBTDefaults
  | setScalaModuleRootDir "chisel3/coreMacros"
  | setScalaModuleScalacOptions scalacOpts

# TODO Should this be part of scala-wake proper?
# It is also used by rocket-chip-wake
def macrosParadiseJar =
  def json = readIvyDepsJSON here // "macrosParadise"
  def scalaVersion  =
    json // "scalaVersion" | getJString | omap makeScalaVersion
    | getOrElse (raise "scalaVersion not found!")
  def dep =
    json // "dependencies" | getJString | getOrElse (raise "macrosParadise ivy dependency not found!")
    | parseIvyDep | expandIvyDep scalaVersion
  resolveIvyDeps (dep, Nil) | getPairFirst | head

global def macrosParadisePlugin = "-Xplugin:{macrosParadiseJar.getPathName}"

global def chisel3Frontend =
  makeScalaModuleFromJSON here "chisel3Frontend"
  | scalaModuleAddSBTDefaults
  | setScalaModuleRootDir "chisel3/chiselFrontend"
  | setScalaModuleDeps (chisel3CoreMacros, firrtlScalaModule, Nil)
  | setScalaModuleScalacOptions scalacOpts

global def chisel3Version = "3.2-SNAPSHOT"

def buildInfo ver =
  def content =
    "package chisel3\n"
    , "import scala.Predef._\n"
    , "/** This object was generated by chisel3-wake */"
    , "case object BuildInfo \{"
    , "  val buildInfoPackage: String = \"chisel3\""
    , "  val version: String = \"{chisel3Version}\""
    , "  val scalaVersion: String = \"{ver.scalaVersionToString}\""
    , "  override val toString: String ="
    , "    s\"buildInfoPackage: $buildInfoPackage, version: $version, scalaVersion: $scalaVersion\""
    , "\}"
    , Nil
  def outDir = mkdir "{buildDir.getPathName}/buildInfo"
  def outFile = "{outDir.getPathName}/BuildInfo.scala"
  write outFile (content | catWith "\n")

global def chisel3ScalaModule =
  def base =
    makeScalaModuleFromJSON here "chisel3"
    | scalaModuleAddSBTDefaults
    | setScalaModuleRootDir "chisel3"
    | setScalaModuleDeps (chisel3Frontend, Nil)
    | setScalaModuleScalacOptions scalacOpts
  def genSrcs Unit = buildInfo base.getScalaModuleScalaVersion, Nil
  base
  | setScalaModuleFnGeneratedSources genSrcs
